#!/usr/bin/env python3
from __future__ import annotations

import argparse
import re
import json

REMOVE_NUMBERS = re.compile('(?: --)? #[0-9]+$')
ESCAPE = {ord(c): fr'\{c}' for c in r'\_[]*'}


def _escape(s: str) -> str:
    return ''.join(
        # leave text alone inside `backticks`
        part.translate(ESCAPE) if i % 2 == 0 else f'`{part}`'
        for i, part in enumerate(s.strip().split('`'))
    )


def _video_link(video: dict[str, str]) -> str:
    title = _escape(REMOVE_NUMBERS.sub('', video['title']))
    return f'[{title}]({video["url"]})'


def main() -> int:
    parser = argparse.ArgumentParser()
    parser.add_argument('input_json')
    parser.add_argument('output')
    args = parser.parse_args()

    with open(args.input_json) as f:
        contents = json.load(f)

    playlist, = [
        playlist
        for playlist in contents['playlists']
        if playlist['playlist_name'] == 'explains'
    ]
    playlist_id = playlist['playlist_id']

    with open(args.output, 'w') as f:
        f.write('explains\n')
        f.write('========\n')
        f.write('\n')
        f.write('[update playlist]\n')
        f.write('\n')
        f.write('the full [playlist] is on youtube\n')
        f.write('\n')
        f.write('[update playlist]: https://github.com/anthonywritescode/explains/actions/workflows/update.yml\n')  # noqa: E501
        playlist_link = f'https://www.youtube.com/playlist?list={playlist_id}'
        f.write(f'[playlist]: {playlist_link}\n')
        f.write('\n')

        f.write(f'0. {_video_link(playlist["videos"][0])}\n')
        for video in playlist['videos'][1:]:
            f.write(f'1. {_video_link(video)}\n')

    return 0


if __name__ == '__main__':
    raise SystemExit(main())
